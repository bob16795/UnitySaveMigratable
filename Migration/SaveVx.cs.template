using System.Collections;
using System.IO;
using System.Collections.Generic;
using UnityEngine;
using CTL.Core;

namespace CTL.Migration
{
    public class SaveV%%Version%% : SaveV%%Version - 1%%
    {
        public new uint version = %%Version%%;

        /// <summary>
        /// defaults for a save of V%%Version%%
        /// </summary>
        public SaveV%%Version%%() : base()
        {
            
        }

        /// <summary>
        /// creates a save of V%%Version%% from V%%Version - 1%%
        /// </summary>
        public SaveV%%Version%%(SaveV%%Version - 1%% prev) : this()
        {
            this.version = %%Version%%;
            // load data
        }

        public override ISaveFileVersion Read(BinaryReader reader)
        {
            SaveV%%Version%% result = new SaveV%%Version%%((SaveV%%Version - 1%%)base.Read(reader));

            return result;
        }

        public override void Load()
        {
            base.Load();
        }
        
        public override void Write(BinaryWriter writer)
        {
            base.Write(writer);
        }

        public override void UpdateSave()
        {
            base.UpdateSave();
        }
    }
}
